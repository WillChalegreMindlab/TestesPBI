table dMindzup
	lineageTag: 99213f1d-4020-457c-8934-5a7f880faccf

	measure 'Quantidade de Licenças' = ```
			
			    SUM(dMindzup[quantidade_licenças])
			```
		formatString: 0
		lineageTag: 93ce1fca-3a14-4ca0-92e6-0869c3ab1f1e

	measure 'Quantidade Cadastrados' = ```
			
			    SUM(dMindzup[Total Cadastrados])
			```
		formatString: 0
		lineageTag: 34ea6f49-bc33-4a60-ac60-ae775c5ecc58

	measure 'Quantidade Cadastrados com Avatar' = ```
			
			    SUM(dMindzup[Total Cadastrados Com Avatar])
			```
		formatString: 0
		lineageTag: 854388d8-66a0-4fe2-ac0f-af6fb1405a0e

	measure 'Quantidade Cadastrados - Aluno' = ```
			
			    CALCULATE(
			        [Quantidade Cadastrados]
			        , KEEPFILTERS(not ISBLANK(fBUNivel0[Departamento 1]))
			    )
			```
		formatString: 0
		lineageTag: a5993d28-659c-47f2-b076-bf033e9c13c1

	measure 'Quantidade Cadastrados com Avatar - Aluno' = ```
			
			     CALCULATE(
			        [Quantidade Cadastrados com Avatar]
			        , KEEPFILTERS(not ISBLANK(fBUNivel0[Departamento 1]))
			    )
			```
		formatString: 0
		lineageTag: 12de1492-3e8f-4e31-aa44-d479e474e036

	measure 'Quantidade de Licenças - Aluno' = ```
			
			    CALCULATE(
			        [Quantidade de Licenças]
			        , KEEPFILTERS(not ISBLANK(fBUNivel0[Departamento 1]))
			    )
			```
		formatString: 0
		lineageTag: a91df50f-d5c0-4497-94ee-8ae22ceb7f01

	column 'Nome da Escola'
		dataType: string
		lineageTag: 83da7099-e7bb-4b5e-8f69-f49ca94de519
		summarizeBy: none
		sourceColumn: Nome da Escola

		annotation SummarizationSetBy = Automatic

	column 'ID da Escola'
		dataType: int64
		formatString: 0
		lineageTag: 9b322055-d503-4fa2-b2a4-8e4033feff91
		summarizeBy: sum
		sourceColumn: ID da Escola

		annotation SummarizationSetBy = Automatic

	column 'ID da rede'
		dataType: int64
		formatString: 0
		lineageTag: 155c37c9-07f8-4d7c-8ebf-29002966aade
		summarizeBy: sum
		sourceColumn: ID da rede

		annotation SummarizationSetBy = Automatic

	column 'INEP da Escola'
		dataType: string
		lineageTag: 8d54fe76-27cf-4b7b-86e9-efc4af3c8f41
		summarizeBy: none
		sourceColumn: INEP da Escola

		annotation SummarizationSetBy = Automatic

	column Instituição
		dataType: string
		lineageTag: 991e6892-2d00-4935-9d59-b9e13cc973ef
		summarizeBy: none
		sourceColumn: Instituição

		annotation SummarizationSetBy = Automatic

	column 'Ano Escolar'
		dataType: string
		lineageTag: 6f6a0c44-6b6a-4dd4-9fb3-82c11712a060
		summarizeBy: none
		sourceColumn: Ano Escolar

		annotation SummarizationSetBy = Automatic

	column ordem
		dataType: int64
		formatString: 0
		lineageTag: 568566eb-5b6a-4b6a-a959-25770f69a00b
		summarizeBy: sum
		sourceColumn: ordem

		annotation SummarizationSetBy = Automatic

	column quantidade_licenças
		dataType: int64
		formatString: 0
		lineageTag: d9c8bbf4-285e-4455-ab71-82780f795079
		summarizeBy: sum
		sourceColumn: quantidade_licenças

		annotation SummarizationSetBy = Automatic

	column 'Total Cadastrados'
		dataType: int64
		formatString: 0
		lineageTag: 05c11237-4f7b-40b2-b5af-fc1847a72137
		summarizeBy: sum
		sourceColumn: Total Cadastrados

		annotation SummarizationSetBy = Automatic

	column 'Total Cadastrados Com Avatar'
		dataType: int64
		formatString: 0
		lineageTag: b9bb9f25-3b43-452c-8b62-d37f1e9ba9ed
		summarizeBy: sum
		sourceColumn: Total Cadastrados Com Avatar

		annotation SummarizationSetBy = Automatic

	column ClientUniqueIdentifier
		dataType: string
		lineageTag: 4ed60fea-19cd-478a-a314-bddd6e6856b6
		summarizeBy: none
		sourceColumn: ClientUniqueIdentifier

		annotation SummarizationSetBy = Automatic

	partition dMindzup-5180c4ae-73c7-42fc-8aab-b3fe792767f2 = m
		mode: import
		queryGroup: API
		source =
				let
				    Fonte = Excel.Workbook(Web.Contents("https://metabase.mindzup.com.br/api/public/card/ca75c2c9-3574-404f-9955-07a328ae44b0/query/xlsx?parameters=%5B%5D"), null, false),
				    #"Query result_sheet" = Fonte{[Item="Query result",Kind="Sheet"]}[Data],
				    FilterNullAndWhitespace = each List.Select(_, each _ <> null and (not (_ is text) or Text.Trim(_) <> "")),
				    #"Outras Colunas Removidas" = Table.SelectColumns(#"Query result_sheet", List.Select(Table.ColumnNames(#"Query result_sheet"), each try not List.IsEmpty(FilterNullAndWhitespace(Table.Column(#"Query result_sheet", _))) otherwise true)),
				    #"Cabeçalhos Promovidos" = Table.PromoteHeaders(#"Outras Colunas Removidas", [PromoteAllScalars=true]),
				    #"Tipo Alterado" = Table.TransformColumnTypes(#"Cabeçalhos Promovidos",{{"ID da rede", Int64.Type}, {"Nome da rede", type text}, {"ID da Escola", Int64.Type}, {"INEP da Escola", type text}, {"Nome da Escola", type text}, {"Ano Escolar", type text}, {"ordem", Int64.Type}, {"quantidade_licenças", Int64.Type}, {"quantidade_ativados", Int64.Type}, {"quantidade_com_avatar", Int64.Type}}),
				    #"Linhas Filtradas" = Table.SelectRows(#"Tipo Alterado", each true),
				    #"Colunas Renomeadas" = Table.RenameColumns(#"Linhas Filtradas",{{"quantidade_ativados", "Total Cadastrados"}, {"quantidade_com_avatar", "Total Cadastrados Com Avatar"}, {"Nome da rede", "Instituição"}}),
				    #"Colunas Reordenadas" = Table.ReorderColumns(#"Colunas Renomeadas",{"ID da rede", "ID da Escola", "INEP da Escola", "Instituição", "Nome da Escola", "Ano Escolar", "ordem", "quantidade_licenças", "Total Cadastrados", "Total Cadastrados Com Avatar"}),
				    #"Coluna Condicional Adicionada" = Table.AddColumn(#"Colunas Reordenadas", "ClientUniqueIdentifier", each if Text.Contains([Nome da Escola], "Escola Prof") then "N"&Number.ToText([ID da rede]) else if [ID da rede]=36 then "N36" else "S"&Number.ToText([ID da Escola])),
				    #"Linhas Filtradas1" = Table.SelectRows(#"Coluna Condicional Adicionada", each [ID da rede] <> 27)
				in
				    #"Linhas Filtradas1"

	annotation PBI_ResultType = Table


table ProfessoresUsandoAgenda
	lineageTag: c46de7a3-b8ee-4a25-b439-1bf17c5ec6c8

	measure 'Contagem Professores Agenda' = DISTINCTCOUNT(ProfessoresUsandoAgenda[CPF do Professor])
		formatString: 0
		lineageTag: 86e775a9-101c-48be-9d15-48c054e0bede

	measure '% Usando Agenda' = DIVIDE([Contagem Professores Agenda],[ID Cadastrados (prof)], "")
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: 6df3b62e-5dce-4744-8b29-67d029708493

	column 'CPF do Professor'
		dataType: string
		lineageTag: 24db52bf-b0b8-4d64-b4a7-a62a5550a4dd
		summarizeBy: none
		sourceColumn: CPF do Professor

		annotation SummarizationSetBy = Automatic

	partition ProfessoresUsandoAgenda = m
		mode: import
		queryGroup: API
		source =
				let
				    Fonte = Excel.Workbook(Web.Contents("https://metabase.mindzup.com.br/api/public/card/cb706b28-5fab-4d96-bd1a-4c858ce2ed3c/query/xlsx?parameters=%5B%5D"), null, false),
				    #"Query result_sheet" = Fonte{[Item="Query result",Kind="Sheet"]}[Data],
				    FilterNullAndWhitespace = each List.Select(_, each _ <> null and (not (_ is text) or Text.Trim(_) <> "")),
				    #"Outras Colunas Removidas" = Table.SelectColumns(#"Query result_sheet", List.Select(Table.ColumnNames(#"Query result_sheet"), each try not List.IsEmpty(FilterNullAndWhitespace(Table.Column(#"Query result_sheet", _))) otherwise true)),
				    #"Cabeçalhos Promovidos" = Table.PromoteHeaders(#"Outras Colunas Removidas", [PromoteAllScalars=true])
				in
				    #"Cabeçalhos Promovidos"

	annotation PBI_ResultType = Exception

	annotation PBI_NavigationStepName = Navigation

